cmake_minimum_required(VERSION 3.0)
set(CMAKE_BUILD_TYPE Debug)
list(APPEND CMAKE_PREFIX_PATH "/home/anon/Programs/Qt/6.5.0/gcc_64/lib/cmake")
PROJECT(DD2OvitoVtk CXX)

find_package(VTK REQUIRED)
#include(${VTK_USE_FILE})

add_executable(DD2OvitoVtk DD2OvitoVtk.cxx)

include_directories(/usr/local/include)
include_directories(../)
#include_directories(/mnt/c/Users/liamm/OneDrive/Desktop/codes/eigen-3.4.0)

set(EigenRootDir "/usr/include/eigen3")
include_directories(${EigenRootDir})
set(MoDELibRootDir "${CMAKE_CURRENT_SOURCE_DIR}/../..")
set(CMAKE_BUILD_TYPE Release)

### fftw3 ### find_package is currently broken. Workaround using find_library
find_library(FFTW3_LIBRARIES fftw3)  
if(FFTW3_LIBRARIES)
	cmake_path(GET FFTW3_LIBRARIES PARENT_PATH FFTW3_LIBRARY_DIRS)
	set(FFTW3_INCLUDE_DIRS ${FFTW3_LIBRARY_DIRS}/../include)
	message(STATUS "FFTW3_LIBRARIES:" ${FFTW3_LIBRARIES})
	message(STATUS "FFTW3_LIBRARY_DIRS:" ${FFTW3_LIBRARY_DIRS})
	message(STATUS "FFTW3_INCLUDE_DIRS:" ${FFTW3_INCLUDE_DIRS})
	include_directories(${BOOST_INCLUDE_DIRS})
	include_directories(${FFTW3_INCLUDE_DIRS})
	add_definitions(-D _MODEL_GLIDE_PLANE_NOISE_GENERATOR_)
else()
  message(WARNING "library ${FFTW3_LIBRARIES} not found, noise generator is disabled")
endif()

set_property(TARGET DD2OvitoVtk PROPERTY CXX_STANDARD 20)

include_directories(${MoDELibRootDir}/include/Utilities/)
include_directories(${MoDELibRootDir}/include/IO/)
include_directories(${MoDELibRootDir}/include/Math/)
include_directories(${MoDELibRootDir}/include/Geometry/)
include_directories(${MoDELibRootDir}/include/Mesh/)
include_directories(${MoDELibRootDir}/include/Lattices/)
include_directories(${MoDELibRootDir}/include/GlidePlanes/)
include_directories(${MoDELibRootDir}/include/PolycrystallineMaterials/)
include_directories(${MoDELibRootDir}/include/DislocationDynamicsIO/)
include_directories(${MoDELibRootDir}/include/DislocationDynamicsBase/)
include_directories(${MoDELibRootDir}/include/DislocationMobilities/)
include_directories(${MoDELibRootDir}/include/FEM/)

add_subdirectory(${MoDELibRootDir}/src/Geometry Geometry)
add_subdirectory(${MoDELibRootDir}/src/Lattices Lattices)
add_subdirectory(${MoDELibRootDir}/src/Mesh Mesh)
add_subdirectory(${MoDELibRootDir}/src/GlidePlanes GlidePlanes)
add_subdirectory(${MoDELibRootDir}/src/DislocationMobilities DDDmobilities)
add_subdirectory(${MoDELibRootDir}/src/DislocationDynamicsIO DDDIO)
add_subdirectory(${MoDELibRootDir}/src/PolycrystallineMaterials PolyMaterials)

#if(VTK_LIBRARIES)
#  target_link_libraries(DD2OvitoVtk ${VTK_LIBRARIES})
#else()
#  target_link_libraries(DD2OvitoVtk vtkHybrid vtkWidgets)
#endif()
target_link_libraries(DD2OvitoVtk ${FFTW3_LIBRARIES} ${VTK_LIBRARIES})
